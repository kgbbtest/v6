
####################################################################
##### This file is automatically generated -- edit at your own risk
##### Built by root@localhost.localdomain
##### on Wed Jun 12 13:17:05 HKT 2019 using template OS/Linux
##### in /root/python_email/linux/sendmail-8.14.5/libmilter
####################################################################






















# sendmail dir
SMSRCDIR=${SRCDIR}/sendmail

















# C compiler
CC=	cc
CCOPTS=   -D_REENTRANT

# Linker for executables
CCLINK = cc
# Linker for libraries
LD=	ld
LDOPTS=	 -lpthread
LDOPTS_SO= ${LDOPTS} -shared

# Shell
SHELL=	/bin/sh

# use O=-O (usual) or O=-g (debugging)
O=	-O2

# Object archiver
AR=     ar
AROPTS=	crv

# Remove command
RM=     rm
RMOPTS=	-f

# Link command
LN=     ln
LNOPTS=	-f -s

# Ranlib (or echo)
RANLIB= ranlib
RANLIBOPTS=	

# Object stripper
STRIP=	strip
STRIPOPTS=	

# environment definitions (e.g., -D_AIX3)
ENVDEF= -DNOT_SENDMAIL -Dsm_snprintf=snprintf 

# location of the source directory
SRCDIR=	../..

# include directories
INCDIRS= -I${SMSRCDIR}   -I${SRCDIR}/include 

# library directories
LIBDIRS=

# Additional libs needed
LIBADD=  

# libraries required on your system
LIBS= ${LIBADD}  -ldl  

# location of sendmail binary (usually /usr/sbin or /usr/lib)
BINDIR=	/usr/sbin

# location of "user" binaries (usually /usr/bin or /usr/ucb)
UBINDIR=/usr/bin

# location of "root" binaries (usually /usr/sbin or /usr/etc)
SBINDIR=/usr/sbin

# location of "root" binaries (usually /usr/sbin or /usr/etc)
MBINDIR=/usr/sbin

# location of "libexec" binaries (usually /usr/libexec or /usr/etc)
EBINDIR=/usr/sbin

# where to install include files (usually /usr/include)
INCLUDEDIR=/usr/include

# where to install library files (usually /usr/lib)
LIBDIR=/usr/lib

# additional .c files needed
SRCADD= 



# additional .o files needed
OBJADD=	
libmilterOBJADD=   

# copy files
CP= cp

# In some places windows wants nmake where unix would just want make
NMAKE=${MAKE}

###################  end of user configuration flags  ######################

BUILDBIN=${SRCDIR}/devtools/bin
COPTS=	-I. ${INCDIRS} ${ENVDEF} ${CCOPTS}
CFLAGS=	$O ${COPTS} -DXP_MT


BEFORE=	errstring.c strl.c sm_os.h

LINKS=

libmilterSRCS= main.c engine.c listener.c worker.c handler.c comm.c smfi.c signal.c sm_gethost.c monitor.c errstring.c strl.c  ${SRCADD}
libmilterOBJS= main.o engine.o listener.o worker.o handler.o comm.o smfi.o signal.o sm_gethost.o monitor.o errstring.o strl.o   ${OBJADD} ${libmilterOBJADD}
libmilterSMDEPLIBS= 
libmilterTARGET_LINKS= 




NROFF=	groff -Tascii
MANDOC=	-man

INSTALL=install

# User binary ownership/permissions
UBINOWN=bin
UBINGRP=bin
UBINMODE=555

# Setuid binary ownership/permissions
SBINOWN=root
SBINGRP=bin
SBINMODE=4555

# Setgid binary ownership/permissions
GBINOWN=root
GBINGRP=smmsp
GBINMODE=2555

# owner of MSP queue
MSPQOWN=smmsp

# MTA binary ownership/permissions
MBINOWN=root
MBINGRP=bin
MBINMODE=550

# Library ownership/permissions
LIBOWN=root
LIBGRP=bin
LIBMODE=0444

# Include file ownership/permissions
INCOWN=root
INCGRP=bin
INCMODE=0444










ALL=${BEFORE} ${LINKS} libmilter.a 

all: ${ALL}

clean: libmilter-clean 

SRCS=${libmilterSRCS} 
OBJS=${libmilterOBJS} 





VPATH=${srcdir}

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	list='$(TESTS)'; \
	srcdir=$(srcdir); export srcdir; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	fi


check-am: all
	$(MAKE) $(check_PROGRAMS)
	$(MAKE) check-TESTS
check: check-am


SRCS_CHK=${SRCS_CHK} ${SRCS_CHK} 
OBJS_CHK=${OBJS} ${OBJS} 


install: install-mfapi  install-libmilter 

install-strip: install-mfapi  install-libmilter  



sm_os.h: ${SRCDIR}/include/sm/os/sm_os_linux.h
	${RM} ${RMOPTS} sm_os.h
	${LN} ${LNOPTS} ${SRCDIR}/include/sm/os/sm_os_linux.h sm_os.h




errstring.c:
	${LN} ${LNOPTS} ${SRCDIR}/libsm/errstring.c .

strl.c:
	${LN} ${LNOPTS} ${SRCDIR}/libsm/strl.c .

################  Dependency scripts
#	$Id: CC-M.m4,v 8.5 1999/05/27 22:03:28 peterh Exp $
depend: ${BEFORE} ${LINKS}
	@mv Makefile Makefile.old
	@sed -e '/^# Do not edit or remove this line or anything below it.$$/,$$d' < Makefile.old > Makefile
	@echo "# Do not edit or remove this line or anything below it." >> Makefile
	${CC} -M ${COPTS} ${SRCS} >> Makefile

#	End of $RCSfile: CC-M.m4,v $
################  End of dependency scripts

libmilter.a: ${BEFORE} ${libmilterOBJS}
	${AR} ${AROPTS} libmilter.a ${libmilterOBJS}
	${RANLIB} ${RANLIBOPTS} libmilter.a


install-libmilter: libmilter.a
	
	${INSTALL} -c -o ${LIBOWN} -g ${LIBGRP} -m ${LIBMODE} libmilter.a ${DESTDIR}${LIBDIR}

libmilter-clean:
	rm -f ${OBJS} libmilter.a ${MANPAGES}


# Install the API header files
MFAPI=	${SRCDIR}/include/libmilter/mfapi.h
MFDEF=	${SRCDIR}/include/libmilter/mfdef.h
install-mfapi: ${MFAPI}
	if [ ! -d ${DESTDIR}${INCLUDEDIR}/libmilter ]; then mkdir -p ${DESTDIR}${INCLUDEDIR}/libmilter; else :; fi
	${INSTALL} -c -o ${INCOWN} -g ${INCGRP} -m ${INCMODE} ${MFAPI} ${DESTDIR}${INCLUDEDIR}/libmilter/mfapi.h
	${INSTALL} -c -o ${INCOWN} -g ${INCGRP} -m ${INCMODE} ${MFDEF} ${DESTDIR}${INCLUDEDIR}/libmilter/mfdef.h
